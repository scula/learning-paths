name: Working with numbers in Python
node_ref: working_with_python_numbers
software_dependencies_ids:
  - py_3_11_x
content:
  - type: "paragraph"
    description: |
      Introduction to lesson about numbers in Python.
      Topics of variables and number data types are covered.
      Difference between how humans process numbers and computers.
      Practice task with numbers.
    value: ""
  - type: "paragraph"
    description: |
      Second level title "How and why we use numbers in Python?"
      Programming languages help manipulate data and numbers as well.
      Python has built-in support for numbers and mathematical operations.
      Codeblock with comments on basic math operations without variables
    value: ""
  - type: "paragraph"
    description: |
      Invitation to launch the following code.
      Small reference on print function and its arguments.
    value: ""
  - type: "codeblock-exec"
    description: |
      Basic math operations without variables
    language: "python"
    value: |
      print("Addition of 1 + 1 is ", 1 + 1)
      print("Subtraction of 341 - 159 is ", 341 - 159)
      print("Multiplication of 39 * 83 is ", 39 * 83)
      print("Division of 100 / 5 is ", 100 / 5)
      print("Exponentiation of 2 ** 3 is ", 2 ** 3)
  - type: "paragraph"
    description: |
      Data used in different places and big formulas are not perfect that's why we use variables.
      Codeblock with comments on basic math operations with variables
    value: ""
  - type: "paragraph"
    description: |
      Difference between how humans process numbers and computers.
      Limitations of natural and floating point numbers in Python (range, precision).
      Different numbers have different types.
      codeblock that numbers have different types with comments
    value: ""
  - type: "paragraph"
    description: |
      Explain what assignment is.
      Assigning a variable sets a type for it.
      That's why Python is a dynamically typed language.
      Invitation to launch the following code.
    value: ""
  - type: "codeblock-exec"
    description: |
      Setting variables, checking their types
    language: "python"
    value: |
      a = 4
      b = 2.0
      c = 1.0 + 0.0j
      # Now variables a, b and c hold different types of numbers
      print("a is ", a)
      print("b is ", b)
      print("c is ", c)
      # And we can use variables as part of operations
      print("a + b is ", a + b)
      # Moreover we can assign result of operation to a previously defined variable
      a = a + b
      # Or we can assign the result of an operation to a new variable
      d = a + b
  - type: "quiz"
    quiz_items:
      - question: |
          In the previous code we changed variable `a`` and then used it to calculate `d`. 
          What value does `d` hold? Try to calculate it yourself or add `print(d)` to the end of the code and run it."
        answers:
          - value: "6"
          - value: "8"
            correct: true
          - value: "10"
          - value: "12"
  - type: "paragraph"
    description: |
      Task description and invitation to solve it.
      Task is to calculate the area of a circle with radius 5.
      The variable Pi, area and radius are already defined.
      Assign the result of the calculation to the variable `area`.
    value: ""
  - type: "kata"
    task: |
      Calculate the area of a circle with a given radius. 
      Assign the result of the calculation to the variable `area`.
    boilerplate: |
      Pi = 3.141592653589793
      radius = 5
      area = # your code here
    solution: |
      Pi = 3.141592653589793
      radius = 5
      area = Pi * radius ** 2
