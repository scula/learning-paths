version: v1
course_name: intro_python
name: "Python for Beginners"
description: |
  The course is designed for absolute beginners and should provide a solid foundation for any future learning path (data science, backend, system or desktop engineering)
learning_goals: |
  Student should understand what is a programming language (Python),
  why it is needed and how it works.
  Student should understand the environment and tools needed to start learning Python.
  Student should be able to write simple programs in Python.
difficulty: |
  Compulsory lessons should be level 1-2, complementary 2 or max 3.
groups: # can differ from nodes because of the logical issues
  - "Structures"
  - "Story"
  - "General"
  - "Input and Output"
  - "OS"
  - "Functions"
  - "Github"
  - "Productivity tools"
  - "Object Oriented Programming"
  - "Control Flow"
  - "Sprints"
  - "Projects"
  - "OS"
kntree:
  sha_version: "sha version for knowledge tree"
sprints:
  - name: "Getting started"
    sprint_items:
      - type: "single"
        collections:
          - node_string_id: "helper_py_sprint_one" # node_string_id with specified kntree sha must be in db
            group: "Sprints"
            lesson_sha: "77608bf" # combo for node_string_id and lession_sha should be in db
            file_path: "lessons/helper/py/sprint_one.yaml" # provided when lesson was not created before, ignored otherwise
            reminder: true # track if student hasn't finished lesson and send him email
            public: true
      - type: "single"
        collections:
          - node_string_id: "stories_zombie_survival_intro"
            group: "Story"
            lesson_sha: "101b0c2"
            file_path: "lessons/story/zombie_survival/intro.yaml"
      - type: parallel
        collections:
          - node_string_id: "prog_langs_python_syntax"
            group: "General"
            lesson_sha: "810b6d6"
            file_path: "lessons/prog_langs/python/general/syntax.yaml"
          - node_string_id: "prog_langs_python_interpreter"
            group: "General"
            lesson_sha: "810b6d6"
            file_path: "lessons/prog_langs/python/general/interpreter.yaml"
          - node_string_id: "os_command_line_shell"
            group: "OS"
            lesson_sha: "810b6d6"
            file_path: "lessons/os/command_line_shell.yaml"
      - type: "single"
        collections:
          - node_string_id: stories_zombie_survival_day_one
            group: "Story"
      - type: parallel
        collections:
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures"
            group: "Structures"
          - node_string_id: "prog_langs.python_3_11_4.input_output.print"
            group: "Input and Output"
      - type: "single"
        collections:
          - node_string_id: story.zombie_survival.day_two
            group: "Story"
      - type: "parallel"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.numbers"
            group: "Structures"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.numbers_precision_error"
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.strings"
            group: "Structures"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.guidelines.string_formatting"
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.boolean"
            group: "Structures"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.none"
      - type: "single"
        collections:
          - node_string_id: story.zombie_survival.day_three
            group: "Story"
      - type: "parallel"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.sequence_types"
            group: "Structures"
          - node_string_id: "prog_langs.python_3_11_4.control_flow.conditional_statements"
            group: "Control Flow"
          - node_string_id: "prog_langs.python_3_11_4.control_flow.loops"
            group: "Control Flow"
      - type: "single"
        collections:
          - node_string_id: story.zombie_survival.day_four
            group: "Story"
      - type: "parallel"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.mapping_types_dict"
            group: "Structures"
          - node_string_id: "prog_langs.python_3_11_4.types_and_data_structures.built_in.set_types"
            group: "Structures"
          - node_string_id: "prog_langs.python_3_11_4.functions"
            group: "Functions"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.functions.lambda"
                group: "Functions"
      - type: "single"
        collections:
          - node_string_id: story.zombie_survival.day_five
            group: "Story"
      - type: "single"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.input_output.input"
            group: "Input and Output"
      - type: "selection"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.projects.hangman_game"
            group: "Projects"
          - node_string_id: "prog_langs.python_3_11_4.projects.resource_management_system"
            group: "Projects"
          - node_string_id: "prog_langs.python_3_11_4.projects.weather_prediction"
            group: "Projects"
      - type: "single"
        collections:
          - node_string_id: story.zombie_survival.day_six
            group: "Story"
  - name: "Python: Data and OS Interaction"
    sprint_items:
      - type: "single"
        collections:
          - node_string_id: "helper.py.sprint_two"
            group: "Sprints"
      - type: "single"
        collections:
          - node_string_id: "story.zombie_survival.day_seven"
            group: "Story"
      - type: "parallel"
        collections:
          - node_string_id: "productivity_tools.github.usage"
            group: "Github"
          - node_string_id: "productivity_tools.github.ssh_keys"
            group: "Github"
      - type: "parallel"
        collections:
          - node_string_id: "productivity_tools.vscode_1_79.usage"
            group: "Productivity tools"
          - node_string_id: "git_2_41_0.usage"
            group: "Productivity tools"
      - type: "parallel"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.control_flow.loops.additional_control"
            group: "Control Flow"
          - node_string_id: "prog_langs.python_3_11_4.control_flow.exceptions"
            group: "Control Flow"
          - node_string_id: "prog_langs.python_3_11_4.packages.general"
            group: "General"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.packages.venv_pip"
                group: "General"
      - type: "single"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.oop.classes_objects"
            group: "Object Oriented Programming"
            complementary:
              - node_string_id: "prog_langs.python_3_11_4.oop.methods_properties"
                group: "Object Oriented Programming"
      - type: "parallel"
        collections:
          - node_string_id: "os.directories_and_files"
            group: "OS"
          - node_string_id: "prog_langs.python_3_11_4.files_directories.files_directories"
            group: "OS"
          - node_string_id: "prog_langs.python_3_11_4.file_formats.csv"
            group: "OS"
      - type: "selection"
        collections:
          - node_string_id: "prog_langs.python_3_11_4.projects.file_manager"
            group: "Projects"
          - node_string_id: "prog_langs.python_3_11_4.projects.smart_home_manager"
            group: "Projects"
