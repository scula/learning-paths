# Lesson reqs:
# Motivation
# Lesson goals
# Technical depth
# Documentation topics related
# Structure
# Tone of voice
# Rules:
# each content item value shouldn't exceed 500 characters
# each line shouldn't exceed 100 characters
# Possible content types are listed below
# When generating the image and video leave url empties but add detailed description
node_ref: "lesson_name_id"
content:
  - type: "paragraph" # contains markdown text (headers, lists, links, etc.)
    hero_image: "url" #display before text if present
    card_group: indent # card group name can be used to group cards together
    value: |
      # Lesson Name
      Some content
      * Some list with formatting **term** for example
  - type: "hint"
    card_group: indent
    value: |
      Hint text for explaining something in detail
  - type: "codeblock-exec" # description contains detailed description of codeblock and value holds the code
    description: "Detailed description of codeblock"
    language: "python"
    value: |
      import this
      print("hey man")
  - type: "kata" # Kata has task, start code and solution
    boilerplate: |
      Pi = 3.141592653589793
      radius = 5
      area = # your code here
    task: "Calculate the area of a circle with a given radius. \nAssign the result of the calculation to the variable `area`.\n"
    solution: |
      Pi = 3.141592653589793
      radius = 5
      area = Pi * radius ** 2
    test_code: |
      from main import area, Pi, radius
      import unittest
      class TestSquareSpace(unittest.TestCase):
          def test_square_space(self):
            self.assertEqual(area, Pi * radius ** 2, "Make sure that you calculate the square space correctly.")
  - type: "quiz" # Quiz has question and answers
    quiz_items:
      - question: "Question 1"
        answers:
          - value: "Answer 1"
            explanation: "Why it is correct or incorrect"
            correct: true
          - value: "Answer 2"
          - value: "Answer 3"
      - question: "Question 2"
        answers:
          - value: "Answer 1"
          - value: "Answer 2"
            correct: true
          - value: "Answer 3"
  - type: "video" # Video has description and value holds the link
    description: "Detailed description of video"
    value: "https://some_link_to_video"
